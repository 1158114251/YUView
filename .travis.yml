language: cpp

os:
  - linux
  - osx
dist:
  # Request Ubuntu 14 as linux
  - trusty
compiler: 
  - gcc
  
# safelist
branches:
  only:
    - development
    - master
    
before_install:
  # Setup the repository. Qt 5.7 on linux. The latest qt5 version on mac.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository ppa:beineri/opt-qt571-trusty -y; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
  # On linux also get a newer g++. The old one won't work.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; fi
  
install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -qq qt57base; source /opt/qt57/bin/qt57-env.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install qt5; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew link --force qt5; fi
  # On linux, install the new g++ version
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -qq g++-6; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90; fi

script:
  # Run qmake and make
  - qmake
  - make

before_deploy:
  # Here we could package something, create zips and so on.

deploy:
  # We need the compiled files
  # skip_cleanup: true
  # Here we can deploy. Or it could be done in the before_deploy or after_success steps.